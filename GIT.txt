#GIT 
- 현 시점에서 개발자들의 대부분이 채용하여 사용중인 VCS(Versoin Control System) 임.
(Git 외에도 SVN 과 같은 여러가지 형태의 버전관리시스템은 존재함)

#VCS가 필요한 이유
- VCS 는 코드의 변화를 추적하여 관리를 해주는 걸 목적으로 한다.
- 문제가 생겼을때 이전 버전으로 돌아가거나, 변경내용을 비교하는 것이 가능하다.
- 실험적인 코드를 작성하고 실패해도 문제가 발생하지 않는다(이전 버전들을 안전하게 관리함으로)

#사용법
관리하고자 하는 프로젝트에서 우클릭을 하고
Git Vash Here (추천) | Git GUI Here


eclipse 에서 new Project.. ==> 해당 프로젝트 폴더에서  bash를 열고
1. 이 프로젝트를 git이 관리 할 수 있게 설정(최초 한번)
- 설정시 git init 입력

- git status : 깃 저장소의 상태 확인

- git add 추적할 파일명 (git add. : 현재 디렉터리 기준 모든 파일)
(Staging 상태가 됨 / 이대로 스냅샷을 찍을 수 있음.)

- 이 staging 상태를 저장을 하려면 git Commit -m "메세지"
(버전을 저장하는 사용자 설정이 안되있으면 거부가 뜰거임)
git confog -- global user.name
git confog -- global user.email

- git log --online (요약해서 확인)

- git diff ( 비교할 버전들) : 버전간의 차이점을 알려줌

- git checkout | 브랜치 전환, 커밋버전 확인 등 다양한 작업을 수행할 수 있음
git checkout 특정 커밋코드
git checkout master



===============================================
- git branch
브랜치?
git branch - 전체 브랜치 확인
git branch<이름>-새 브랜치 생성(만든 시점의 commit 버전과 같은 상태로 만들어짐)

브랜치 사용이유
: 여러 이유가 있겠지만, 원본 브랜치에 영향을 주지 않은 상태에서 실험적인 작업을 수행할 수 있음
그렇게 함으로써, master branch의 상태를 안정적으로 관리 할 수 있게 됨.

브랜치 작업을 하고 난 이후에 실패를 했다면 버리면 되고
성공을 했다면 branch merge(병합) 를 할 수 있음


vranch merge 방법
: 병합 하고자 하는 브랜치로 전환(master에서 login-test 의 작업을 병합한다고 가정했을때 master로 이동)

: git merge 브랜치명 (login-test 를 병합할거면 git merge login-test)

: git branch -d 브랜치명 ( 브랜치 삭제)

----------------------------------------------------------------------------

Git Hub (GIT 사용자를 위한 원격 저장소 https://github.com/)
- 로컬에서 관리중인 repoistory (저장소)를 원격(클라우드)로 올려두고 관리하는걸 제공해 주는 곳

- 가입 / 원격저장소 생성

  create a new repository (원격저장소)
  >> https://github.com/jiny05/git-tutorial.git (원격저장소)

- 로컬저장소의 원격저장소 연결 (동기화)
git remote add origin https://github.com/jiny05/git-tutorial.git

git push origin master



git clone 원격저장소 주소
(clone 을 받으면 remote 가 연결된 상태로 복제가 된다 / 차후에는 push 만 하면 됨)
====================================================

git fetch 원격저장소의 내용을 최신 내용으로 갱신하는 명령어
=============================================================

app-moim init >>>> hub repository 생성해서 >> push




